app:
  title: Scaffolded Backstage App
  baseUrl: http://localhost:3000

organization:
  name: ERNI-Academy

backend:
  baseUrl: http://localhost:7007
  listen:
    port: 7007

  csp:
    connect-src: ["'self'", 'http:', 'https:']

  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true

  database:
    client: pg
    connection:
      host: ${POSTGRES_HOST}
      port: ${POSTGRES_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}
      ssl: true

integrations:
  github:
    - host: github.com
      token: ${GITHUB_TOKEN}

proxy:

techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

auth:
  environment: production
  providers:
    microsoft:
      production:
        clientId: ${AZURE_CLIENT_ID}
        clientSecret: ${AZURE_CLIENT_SECRET}
        tenantId: ${AZURE_TENANT_ID}
        domainHint: ${AZURE_TENANT_ID}
        additionalScopes:
          - Mail.Send
    github:
      production:
        clientId: ${GITHUB_ORG_OATH_CLIENT_ID}
        clientSecret: ${GITHUB_ORG_OATH_CLIENT_SECRET}
        ssl: true
      development:
        clientId: ${GITHUB_ORG_OATH_CLIENT_ID}
        clientSecret: ${GITHUB_ORG_OATH_CLIENT_SECRET}

scaffolder:

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location]
  locations:
    - type: file
      target: ../../examples/entities.yaml

    - type: file
      target: ../../examples/template/template.yaml
      rules:
        - allow: [Template]

    - type: file
      target: ../../examples/org.yaml
      rules:
        - allow: [User, Group]